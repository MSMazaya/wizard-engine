import component wali {
	def SYS_open(pathname: Pointer, flags: i32, mode: i32) -> i64;
	def SYS_close(fd: i32) -> i64;
	def SYS_read(fd: i32, buf: Pointer, count: i32) -> i64;
	def SYS_write(fd: i32, buf: Pointer, count: i32) -> i64;
}

def O_RDWR = 2;
def main() -> i64 {
	var filename = "empty.txt\x00";
	var fd = wali.SYS_open(Pointer.atContents(filename), O_RDWR, 0);
	var write_str = "Hello world";
	var ret = wali.SYS_write(i32.view(fd), Pointer.atContents(write_str), write_str.length);
	wali.SYS_close(i32.view(fd));
	var read_str = readfile(filename, write_str.length);
	if (ret == write_str.length && equal(write_str, read_str)) 
		return 0;
	return 1;
}

def readfile(filename: string, length: i32) -> string {
	// Reopening file to restart file description index pointer
	var fd = wali.SYS_open(Pointer.atContents(filename), O_RDWR, 0);
	var str = Array<byte>.new(length);
	wali.SYS_read(i32.view(fd), Pointer.atContents(str), length);
	wali.SYS_close(i32.view(fd));
	return str;
}

def equal(arr1: string, arr2: string) -> bool {
	if (arr1 == arr2) return true;
	if (arr1.length != arr2.length) return false;
	for (i < arr1.length) {
		if (arr1[i] != arr2[i]) return false;
	}
	return true;
}
