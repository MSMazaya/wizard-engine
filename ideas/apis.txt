Ideas for events and control APIs

Wasm Events	 	arguments
------------------------------------------
alloc struct/array instance
read/write access
  - memory location
  - table element
  - global
  - object
  - field
  - array/memory copy/fill/init
call/tail-call function
return
frame unwind
throw tag
rethrow exnref
catch exnref
trap
resume cont
resume throw
suspend tag
memory wait/notify
thread spawn
data/elem init/drop
type cast/query

Sub-wasm Events
-------------------------------------------
single-step
gc:start/end
object freed
binding between module
lock acquire/release
thread switch
thread block
thread resume
compile function
deopt function
OSR frame
insert/remove probe
load module
validation error
linking error
OS-level signal
I/O to files, sockets

Command/APIs
------------------------------------------
load wasm module
create new instance, memory, memory, global, table, funcref
insert probe on event
remove probe on event
compile/deopt function
tune parameters
  - GC heuristics
  - compiler heuristics
  - interpreter heuristics

APIs
------------------------------------------
frame accessor
  - get/set local
  - get/set operand
  - get pc, func, instance
  - get depth
  - get caller
lock
  - get owner
mirror on
  - module
  - instance
  - memory
  - global
  - table
  - funcref
redefine
  - function
  - module
list loaded modules
list instances
list threads
get resource usage
deliver signal/async event
dump core

Debugger needs
----------------------------------------------
enumerate locals and stack
step instruction/line
next instruction/line
watchpoint
step into, out
backtrace
call an export
eval an expression
add/remove tracing to a function/line
add/remove a monitor to a function
